# Generated by Django 5.1.6 on 2025-02-28 11:51

import datetime
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('paypark_user', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ParkingPlots',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plot_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('plot_no', models.CharField(editable=False, max_length=10, unique=True)),
                ('status', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
            ],
        ),
        migrations.CreateModel(
            name='PlotOnwners',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ownerID', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('owner_name', models.CharField(max_length=100)),
                ('owner_email', models.CharField(max_length=100, unique=True)),
                ('owner_phone', models.CharField(max_length=15, unique=True)),
                ('owner_address', models.TextField(null=True)),
                ('latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('ownership_type', models.CharField(choices=[('owner', 'Owner'), ('lease', 'Lease')], max_length=10)),
                ('account_number', models.CharField(max_length=20)),
                ('ifsc_code', models.CharField(max_length=11)),
                ('password', models.CharField(max_length=255)),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('operator', 'Operator')], db_index=True, default='operator', max_length=10)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_type_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ParkingReservationPayment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('reservation_status', models.CharField(choices=[('reserved', 'Reserved'), ('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='reserved', max_length=10)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(choices=[('razorpay', 'Razorpay'), ('cash', 'Cash')], max_length=20)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('order_id', models.CharField(blank=True, help_text='Razorpay order_id or any external gateway order ID', max_length=100, null=True)),
                ('payment_id', models.CharField(blank=True, help_text='Razorpay payment_id or any external gateway payment ID', max_length=100, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('plot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='partner_app.parkingplots')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='paypark_user.customer')),
            ],
        ),
        migrations.AddField(
            model_name='parkingplots',
            name='owner_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plots', to='partner_app.plotonwners'),
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='parking_station/')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='partner_app.plotonwners')),
            ],
            options={
                'db_table': 'Parking_Station_Images',
            },
        ),
        migrations.CreateModel(
            name='AdminOTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otp', models.CharField(max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='partner_app.plotonwners')),
            ],
            options={
                'db_table': 'admin_otp',
            },
        ),
        migrations.CreateModel(
            name='ParkingCharge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pricing_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('hourly_rate', models.FloatField()),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pricing', to='partner_app.plotonwners')),
                ('vehicle_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='partner_app.vehicle')),
            ],
            options={
                'db_table': 'ParkingCharge',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('review_id', models.AutoField(primary_key=True, serialize=False)),
                ('review_text', models.TextField()),
                ('rating', models.FloatField()),
                ('review_date', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='partner_app.plotonwners')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='paypark_user.customer')),
            ],
            options={
                'constraints': [models.CheckConstraint(condition=models.Q(('rating__gte', 1), ('rating__lte', 5)), name='rating_between_1_and_5')],
            },
        ),
    ]
